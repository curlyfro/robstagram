{
  "runtime": "NetCore21",
  "defaultVariables": null,
  "swaggerGenerator": {
    "fromSwagger": {
      "json": "{\r\n  \"x-generator\": \"NSwag v11.19.2.0 (NJsonSchema v9.10.73.0 (Newtonsoft.Json v11.0.0.0))\",\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"title\": \"Robstagram API\",\r\n    \"description\": \"A simple ASP.NET Core web API\",\r\n    \"termsOfService\": \"None\",\r\n    \"contact\": {\r\n      \"name\": \"rschw\",\r\n      \"url\": \"https://github.com/rschw\",\r\n      \"email\": \"\"\r\n    },\r\n    \"version\": \"v1\"\r\n  },\r\n  \"host\": \"localhost:25850\",\r\n  \"schemes\": [\r\n    \"http\"\r\n  ],\r\n  \"consumes\": [\r\n    \"application/json\"\r\n  ],\r\n  \"produces\": [\r\n    \"application/json\"\r\n  ],\r\n  \"paths\": {\r\n    \"/api/Accounts/register\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Accounts\"\r\n        ],\r\n        \"summary\": \"Register a new user for the app\",\r\n        \"description\": \"Creates a new user in database\",\r\n        \"operationId\": \"Accounts_Register\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"model\",\r\n            \"in\": \"body\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/RegistrationViewModel\"\r\n            },\r\n            \"x-nullable\": true\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Accounts/profile\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Accounts\"\r\n        ],\r\n        \"summary\": \"Get profile information for current user\",\r\n        \"description\": \"Returns profile information for current authenticated user\",\r\n        \"operationId\": \"Accounts_GetProfile\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/ProfileData\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Auth/login\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Auth\"\r\n        ],\r\n        \"summary\": \"Login a user with specified credentials\",\r\n        \"description\": \"Login a user with specified credentials and provide an authentication token\",\r\n        \"operationId\": \"Auth_Login\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"credentials\",\r\n            \"in\": \"body\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/CredentialsViewModel\"\r\n            },\r\n            \"x-nullable\": true\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Robstagram/posts\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Robstagram\"\r\n        ],\r\n        \"summary\": \"Create a new post\",\r\n        \"description\": \"Create a single post in database\",\r\n        \"operationId\": \"Robstagram_CreatePost\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"model\",\r\n            \"in\": \"body\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/PostViewModel\"\r\n            },\r\n            \"x-nullable\": true\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Robstagram\"\r\n        ],\r\n        \"summary\": \"Returns all posts\",\r\n        \"description\": \"Returns all posts for current PAGE with page LIMIT 5. If FORUSER flag is set only posts\\nwhich were created by current user are returned\",\r\n        \"operationId\": \"Robstagram_GetPosts\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"integer\",\r\n            \"name\": \"page\",\r\n            \"in\": \"query\",\r\n            \"required\": true,\r\n            \"format\": \"int32\",\r\n            \"x-nullable\": false\r\n          },\r\n          {\r\n            \"type\": \"boolean\",\r\n            \"name\": \"forUser\",\r\n            \"in\": \"query\",\r\n            \"default\": false,\r\n            \"x-nullable\": true\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/PostData\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Robstagram/posts/{id}\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Robstagram\"\r\n        ],\r\n        \"summary\": \"Delete the post with the given id\",\r\n        \"operationId\": \"Robstagram_DeletePost\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"integer\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"format\": \"int32\",\r\n            \"x-nullable\": false\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Robstagram\"\r\n        ],\r\n        \"summary\": \"Find post by ID\",\r\n        \"description\": \"Returns the post specified by ID\",\r\n        \"operationId\": \"Robstagram_GetPost\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"integer\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"format\": \"int32\",\r\n            \"x-nullable\": false\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/PostData\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Robstagram/posts/{id}/likes\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Robstagram\"\r\n        ],\r\n        \"summary\": \"Toggle like for post specified by ID\",\r\n        \"description\": \"Toggle like for post specified by ID. If post has already been\\nliked it is unliked for current user.\",\r\n        \"operationId\": \"Robstagram_PostLike\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"integer\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"format\": \"int32\",\r\n            \"x-nullable\": false\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/PostData\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Robstagram/posts/{id}/comments\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Robstagram\"\r\n        ],\r\n        \"summary\": \"Create new comment for post with given id\",\r\n        \"operationId\": \"Robstagram_CreateComment\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"integer\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"format\": \"int32\",\r\n            \"x-nullable\": false\r\n          },\r\n          {\r\n            \"type\": \"string\",\r\n            \"name\": \"text\",\r\n            \"in\": \"query\",\r\n            \"required\": true,\r\n            \"x-nullable\": true\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/PostData\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Robstagram/comments/{id}\": {\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"Robstagram\"\r\n        ],\r\n        \"summary\": \"Delete a comment with given id and return updated post\",\r\n        \"operationId\": \"Robstagram_DeleteComment\",\r\n        \"parameters\": [\r\n          {\r\n            \"type\": \"integer\",\r\n            \"name\": \"id\",\r\n            \"in\": \"path\",\r\n            \"required\": true,\r\n            \"format\": \"int32\",\r\n            \"x-nullable\": false\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/PostData\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Robstagram/activities\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Robstagram\"\r\n        ],\r\n        \"summary\": \"Returns the activities for the authorized user posts\",\r\n        \"operationId\": \"Robstagram_GetActivities\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"x-dictionaryKey\": {\r\n                \"$ref\": \"#/definitions/ActivityTimeRange\"\r\n              },\r\n              \"additionalProperties\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/definitions/ActivityData\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/api/Streaming\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Streaming\"\r\n        ],\r\n        \"operationId\": \"Streaming_Upload\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"x-nullable\": true,\r\n            \"description\": \"\",\r\n            \"schema\": {\r\n              \"type\": \"file\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"definitions\": {\r\n    \"RegistrationViewModel\": {\r\n      \"type\": \"object\",\r\n      \"description\": \"RegistrationViewModel class for registering new users\",\r\n      \"additionalProperties\": false,\r\n      \"properties\": {\r\n        \"email\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"User email and login name\"\r\n        },\r\n        \"password\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"User password\"\r\n        },\r\n        \"firstName\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"User firstname\"\r\n        },\r\n        \"lastName\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"User lastname\"\r\n        },\r\n        \"location\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"User location\"\r\n        }\r\n      }\r\n    },\r\n    \"ProfileData\": {\r\n      \"type\": \"object\",\r\n      \"additionalProperties\": false,\r\n      \"required\": [\r\n        \"facebookId\"\r\n      ],\r\n      \"properties\": {\r\n        \"message\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"firstName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"lastName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"pictureUrl\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"facebookId\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int64\"\r\n        },\r\n        \"location\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"locale\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"gender\": {\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"CredentialsViewModel\": {\r\n      \"type\": \"object\",\r\n      \"additionalProperties\": false,\r\n      \"properties\": {\r\n        \"userName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"password\": {\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    },\r\n    \"PostViewModel\": {\r\n      \"type\": \"object\",\r\n      \"description\": \"PostViewModel class for creating new posts in db using Web API\",\r\n      \"additionalProperties\": false,\r\n      \"required\": [\r\n        \"size\"\r\n      ],\r\n      \"properties\": {\r\n        \"description\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"Description text of the post\"\r\n        },\r\n        \"imageUrl\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"Relative image url on server received by upload service\"\r\n        },\r\n        \"size\": {\r\n          \"type\": \"integer\",\r\n          \"description\": \"Image size in bytes received by upload service\",\r\n          \"format\": \"int64\"\r\n        }\r\n      }\r\n    },\r\n    \"PostData\": {\r\n      \"type\": \"object\",\r\n      \"additionalProperties\": false,\r\n      \"required\": [\r\n        \"id\",\r\n        \"dateCreated\"\r\n      ],\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int32\"\r\n        },\r\n        \"owner\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"imageUrl\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"description\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"likes\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"comments\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"$ref\": \"#/definitions/CommentData\"\r\n          }\r\n        },\r\n        \"dateCreated\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        }\r\n      }\r\n    },\r\n    \"CommentData\": {\r\n      \"type\": \"object\",\r\n      \"additionalProperties\": false,\r\n      \"required\": [\r\n        \"id\",\r\n        \"dateCreated\"\r\n      ],\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int32\"\r\n        },\r\n        \"owner\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"text\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"dateCreated\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        }\r\n      }\r\n    },\r\n    \"ActivityTimeRange\": {\r\n      \"type\": \"integer\",\r\n      \"description\": \"\",\r\n      \"x-enumNames\": [\r\n        \"Today\",\r\n        \"Yesterday\",\r\n        \"Week\",\r\n        \"Month\",\r\n        \"Other\"\r\n      ],\r\n      \"enum\": [\r\n        0,\r\n        1,\r\n        2,\r\n        3,\r\n        4\r\n      ]\r\n    },\r\n    \"ActivityData\": {\r\n      \"type\": \"object\",\r\n      \"additionalProperties\": false,\r\n      \"required\": [\r\n        \"action\",\r\n        \"postId\",\r\n        \"lastChange\"\r\n      ],\r\n      \"properties\": {\r\n        \"action\": {\r\n          \"$ref\": \"#/definitions/ActivityAction\"\r\n        },\r\n        \"postId\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int32\"\r\n        },\r\n        \"imageUrl\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"actors\": {\r\n          \"type\": \"array\",\r\n          \"items\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"lastChange\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        }\r\n      }\r\n    },\r\n    \"ActivityAction\": {\r\n      \"type\": \"integer\",\r\n      \"description\": \"\",\r\n      \"x-enumNames\": [\r\n        \"Liked\",\r\n        \"Commented\"\r\n      ],\r\n      \"enum\": [\r\n        0,\r\n        1\r\n      ]\r\n    }\r\n  }\r\n}",
      "url": "http://localhost:25850/swagger/v1/swagger.json",
      "output": null
    }
  },
  "codeGenerators": {
    "swaggerToTypeScriptClient": {
      "className": "{controller}Service",
      "moduleName": "",
      "namespace": "",
      "typeScriptVersion": 2.7,
      "template": "Angular",
      "promiseType": "Promise",
      "httpClass": "HttpClient",
      "useSingletonProvider": false,
      "injectionTokenType": "InjectionToken",
      "rxJsVersion": 6.0,
      "dateTimeType": "Date",
      "nullValue": "Undefined",
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "generateOptionalParameters": true,
      "exportTypes": true,
      "wrapDtoExceptions": false,
      "clientBaseClass": null,
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "protectedMethods": [],
      "configurationClass": null,
      "useTransformOptionsMethod": false,
      "useTransformResultMethod": false,
      "generateDtoTypes": true,
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "markOptionalProperties": true,
      "generateCloneMethod": false,
      "typeStyle": "Class",
      "classTypes": [],
      "extendedClasses": [],
      "extensionCode": null,
      "generateDefaultValues": true,
      "excludedTypeNames": [],
      "handleReferences": false,
      "generateConstructorInterface": true,
      "convertConstructorInterfaceData": false,
      "importRequiredTypes": true,
      "useGetBaseUrlMethod": false,
      "baseUrlTokenName": "API_BASE_URL",
      "queryNullValue": "",
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "ClientApp/src/app/api/api.service.generated.ts"
    }
  }
}